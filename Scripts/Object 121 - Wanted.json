{
  "Version": 7,
  "Entries": [
    {
      "NPCName": "WANTED",
      "IsNull": false,
      "ObjectID": 0,
      "Hierarchy": 0,
      "FileStart": 0,
      "HierarchyType": 0,
      "ModelPositionOffsets": [
        0,
        0,
        0
      ],
      "ModelScale": 0.01,
      "CutsceneID": 0,
      "LookAtType": 0,
      "HeadLimb": 0,
      "HeadHorizAxis": 0,
      "HeadVertAxis": 0,
      "WaistLimb": 0,
      "WaistHorizAxis": 0,
      "WaistVertAxis": 0,
      "LookAtDegreesVertical": 0,
      "LookAtDegreesHorizontal": 0,
      "LookAtPositionOffsets": [
        0.0,
        0.0,
        0.0
      ],
      "HasCollision": false,
      "PushesSwitches": false,
      "Mass": 254,
      "IsAlwaysActive": false,
      "IsAlwaysDrawn": false,
      "ExecuteJustScript": false,
      "ReactsIfAttacked": false,
      "SfxIfAttacked": -1,
      "EffectIfAttacked": 10,
      "OpensDoors": false,
      "CollisionRadius": 0,
      "CollisionHeight": 0,
      "CollisionYShift": 0,
      "NPCToRide": -1,
      "CastsShadow": false,
      "ShadowRadius": 0,
      "VisibleUnderLensOfTruth": false,
      "Invisible": false,
      "IsTargettable": false,
      "FadeOut": false,
      "Alpha": 255,
      "TargetDistance": 1,
      "TargetLimb": 0,
      "TargetPositionOffsets": [
        0,
        0,
        0
      ],
      "TalkRadius": 150.0,
      "MovementType": 0,
      "MovementDistance": 0,
      "MovementSpeed": 1.0,
      "GravityForce": 0.1,
      "PathID": 0,
      "PathStartNodeID": -1,
      "PathEndNodeID": -1,
      "MovementDelayTime": 0,
      "LoopPath": false,
      "IgnoreYAxis": true,
      "SmoothingConstant": 15.0,
      "TimedPathStart": 0,
      "TimedPathEnd": 65490,
      "MaxDistRoam": 65535,
      "GenLight": false,
      "Glow": false,
      "LightLimb": 0,
      "LightPositionOffsets": [
        0,
        0,
        0
      ],
      "LightColor": "White",
      "LightRadius": 0,
      "AnimationType": 0,
      "Animations": [
        {
          "Name": "Idle",
          "Address": 0,
          "ObjID": -1,
          "Speed": 1.0,
          "StartFrame": 0,
          "EndFrame": 255,
          "FileStart": -1
        },
        {
          "Name": "Walking",
          "Address": 0,
          "ObjID": -1,
          "Speed": 1.0,
          "StartFrame": 0,
          "EndFrame": 255,
          "FileStart": -1
        },
        {
          "Name": "Attacked",
          "Address": 0,
          "ObjID": -1,
          "Speed": 1.0,
          "StartFrame": 0,
          "EndFrame": 255,
          "FileStart": -1
        }
      ],
      "Scripts": [
        {
          "TextLines": [
            "set pause_cutscene true",
            "",
            "SCORE = 0",
            "TIME = 600",
            "DRAW = 0",
            "POINTERX = 160",
            "POINTERY = 120",
            "",
            "play bgm NA_BGM_KOKIRI",
            "",
            "start:",
            "    set script_start here",
            "    DRAW = 1",
            "    play sfx_global NA_SE_SY_HP_RECOVER",
            "    await frames 3",
            "    DRAW = 0",
            "    await frames 1",
            "    DRAW = 1",
            "    play sfx_global NA_SE_SY_HP_RECOVER",
            "    await frames 3",
            "    DRAW = 0",
            "    await frames 1",
            "    DRAW = 1",
            "    play sfx_global NA_SE_SY_HP_RECOVER",
            "    await frames 5",
            "",
            "    TEMP = random.1->4",
            "",
            "    while TEMP == CHOSEN",
            "        TEMP = random.1->4",
            "    endwhile",
            "",
            "    CHOSEN = TEMP",
            "",
            "    spawn 3",
            "        variable 121",
            "        rotation 0 0 CHOSEN",
            "    endspawn",
            "",
            "    await frames 50",
            "    kill npcmaker CHOSEN",
            "",
            "    DRAW = 3",
            "    COUNT_DOWN = 1",
            "",
            "    set script_start here",
            "",
            "",
            "    if BUTTON_PRESSED BTN_A or BUTTON_PRESSED BTN_A true CONTROLLER_2 or BUTTON_PRESSED BTN_A true CONTROLLER_3 or BUTTON_PRESSED BTN_A true CONTROLLER_4",
            "        if ccall NpcM_ClickedRight",
            "           play sfx_global NA_SE_SY_CORRECT_CHIME",
            "           COUNT_DOWN = 0",
            "           SCORE += 1",
            "           ROUND += 1",
            "           TIME_COUNTER += 100",
            "           await TIME_COUNTER == 0",
            "           goto start",
            "        else",
            "           play sfx_global NA_SE_SY_ERROR",
            "           TIME -= 50",
            "",
            "           if TIME < 0",
            "                TIME = 0",
            "           endif",
            "",
            "           return",
            "        endif",
            "    else",
            "        return",
            "    endif",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "ParseErrors": [],
          "Name": "Script"
        },
        {
          "TextLines": [
            "ccall NpcM_DrawWanted _ DRAW"
          ],
          "ParseErrors": [],
          "Name": "Draw"
        },
        {
          "TextLines": [
            "if TIME == 0",
            "    stop bgm 0",
            "    play bgm NA_BGM_GAME_OVER",
            "    DRAW = 2",
            "    script stop 0",
            "    await frames 200",
            "    warp 0xCD 7 7",
            "    await forever",
            "else",
            "",
            "    if COUNT_DOWN == 1",
            "        TIME -= 1",
            "    endif",
            "",
            "    if TIME_COUNTER != 0",
            "        play sfx_global NA_SE_SY_RUPY_COUNT",
            "        TIME += 10",
            "        TIME_COUNTER -= 10",
            "    endif",
            "",
            "endif",
            "",
            "",
            "if BUTTON_PRESSED BTN_START",
            "    warp 0xCD 7 7",
            "    await forever",
            "endif"
          ],
          "ParseErrors": [],
          "Name": "always"
        }
      ],
      "EnvironmentColor": "White",
      "Segments": [
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        []
      ],
      "BlinkPattern": "",
      "TalkPattern": "",
      "BlinkSegment": 7,
      "TalkSegment": 7,
      "BlinkSpeed": 1,
      "TalkSpeed": 1,
      "ExtraDisplayLists": [
        {
          "Name": "DList_0",
          "Address": 0,
          "TransX": 0.0,
          "TransY": 0.0,
          "TransZ": 0.0,
          "RotX": 0,
          "RotY": 0,
          "RotZ": 0,
          "Scale": 1.0,
          "ShowType": 0,
          "Limb": 0,
          "Color": "White",
          "ObjectID": 3,
          "FileStart": -1
        },
        {
          "Name": "DList_1",
          "Address": 0,
          "TransX": 0.0,
          "TransY": 0.0,
          "TransZ": 0.0,
          "RotX": 0,
          "RotY": 0,
          "RotZ": 0,
          "Scale": 1.0,
          "ShowType": 0,
          "Limb": 0,
          "Color": "White",
          "ObjectID": 122,
          "FileStart": -1
        }
      ],
      "DisplayListColors": [],
      "Messages": [],
      "Localization": [],
      "DEBUGShowCols": false,
      "DEBUGPrintToScreen": false,
      "DEBUGLookAtEditor": false,
      "DEBUGExDlistEditor": false,
      "NumVars": 20,
      "NumFVars": 2,
      "ExistInAllRooms": false,
      "CullForward": 1000.0,
      "CullDown": 700.0,
      "CullScale": 350.0,
      "AnimInterpFrames": 4,
      "EmbeddedOverlayCode": {
        "CodeLines": [
          "#include <z64hdr/oot_u10/z64hdr.h>",
          "",
          "// ^ Change the above to ",
          "// #include <z64hdr/oot_u10/z64hdr.h>",
          "// if compiling for OoT 1.0",
          "",
          "#include <npcmaker/npc_maker_types.h>",
          "",
          "/*",
          "To make NPC Maker able to use your function, it must have the following form:",
          "",
          "1. Its name must have a NpcM_ prefix (eg. NpcM_Function),",
          "2. Must have at least two parameters: NpcMaker* and PlayState*. Up to 8 additional float arguments can be passed on from scripts.",
          "3. If you plan to pass the result to scripts, the return type must be float",
          "5. A unique name",
          "",
          "Examples of valid function signatures are thus, for example:",
          "",
          "void NpcM_Function(NpcMaker* npc, PlayState* play, float argument, float argument1)",
          "float NpcM_Function2(NpcMaker* npc, PlayState* play)",
          "float NpcM_DoAThing(NpcMaker* npc, PlayState* play)",
          "",
          "The exception for this is functions which should run \"On limb\", their signature is as follows:",
          "",
          "float NpcM_Function(NpcMaker* npc, PlayState* playState, s32 limbNumber, Gfx** dListPtr, Vec3f* translation, Vec3s* rotation, void* instance, Gfx** gfxP)",
          "",
          "This function should return 0 if the limb is meant to be drawn, and 1 if it is not.",
          "",
          "Warning; When using these functions from scripts, make sure",
          "the return type is valid.",
          "*/",
          "",
          "typedef struct Vec2Faces",
          "{",
          "    s16 x;",
          "    s16 y;",
          "    u8 face;",
          "} Vec2s;",
          "",
          "typedef enum",
          "{",
          "    OPERATION_TYPE_OUT = 0,",
          "    OPERATION_DRAW = 1,",
          "    OPERATION_DRAW_SHADOW = 2,",
          "    OPERATION_DRAW_CREDITS = 3,",
          "    OPERATION_DRAW_CREDITS_SHADOW = 4,",
          "    OPERATION_DRAW_INDIVIDUAL = 5,",
          "    OPERATION_DRAW_INDIVIDUAL_SHADOW = 6,",
          "    OPERATION_SET_POSITIONS = 7,",
          "    OPERATION_EVALUATE_YSIZE = 8,",
          "    OPERATION_SET_POSITIONS_CREDITS = 9,",
          "    OPERATION_EVALUATE_LINE_XSIZE = 10,",
          "    OPERATION_EVALUATE_XSIZE = 11,",
          "    OPERATION_EVALUATE_DIMENSIONS = 12,",
          "} TextboxOperation;",
          "",
          "AudioContext* audioContext = (AudioContext*)0x80125630;",
          "",
          "extern int HoL_DrawMessageTextImpl(PlayState* play, Font* font, Gfx** gfxp, Color_RGB8 Color, Color_RGB8 ShadowColor, ",
          "                                   s16 alpha, s16 shadowAlpha, char* msgData, int posX, int posY, u8 shadowOffsetX, ",
          "                                   u8 shadowOffsetY, Vec2s* positions, int scaleX, int scaleY, int lineMaxX, ",
          "                                   bool noWidescreenAdjust, int operation);",
          "    asm(\"HoL_DrawMessageTextImpl = 0x800756F0 + 0x8\");  ",
          "    ",
          "    ",
          "static inline int HoL_DrawMessageTextInternal(PlayState* play, Font* font, Gfx** gfxp, Color_RGB8 Color, Color_RGB8 ShadowColor, ",
          "                                              s16 alpha, s16 shadowAlpha, char* msgData, int posX, int posY, u8 shadowOffsetX, ",
          "                                              u8 shadowOffsetY, Vec2s* positions, int scale, int operation)",
          "{",
          "    return HoL_DrawMessageTextImpl(play, font, gfxp, Color, ShadowColor, ",
          "                                   alpha, shadowAlpha, msgData, posX, posY, ",
          "                                   shadowOffsetX, shadowOffsetY, positions, ",
          "                                   scale, scale, 0, false, operation);",
          "}",
          "",
          "static inline int HoL_DrawMessageText(PlayState* play, Gfx** gfxp, Color_RGB8 Color, Color_RGB8 ShadowColor, ",
          "                                      s16 alpha, s16 shadowAlpha, char* msgData, int posX, int posY, ",
          "                                      u8 shadowOffsetX, u8 shadowOffsetY, Vec2s* positions, int scale, int operation)",
          "{",
          "    return HoL_DrawMessageTextInternal(play, NULL, gfxp, Color, ShadowColor, alpha, ",
          "                                       shadowAlpha, msgData, posX, posY, shadowOffsetX, ",
          "                                       shadowOffsetY, positions, scale, operation);",
          "}",
          "#define RGBA16 0",
          "#define RGBA16_Setup39 1",
          "#define RGBA32 2",
          "#define RGBA32_Setup39 3",
          "#define I8 4",
          "#define I8_Setup39 5",
          "#define IA8 6",
          "#define IA8_Setup39 7",
          "#define IA16 8",
          "#define IA16_Setup39 9",
          "#define I4 10",
          "#define I4_Setup39 11",
          "#define CI4 12",
          "#define CI4_Setup39 13",
          "#define CI8 14",
          "#define CI8_Setup39 15",
          "#define IA4 16",
          "#define IA4_Setup39 17",
          "",
          "#define SCALE_DEFAULT 1.0",
          "",
          "extern void Draw2DScaled(u8 RGBAType, int object, PlayState* playState, Gfx** gfxp, s16 centerX, s16 centerY, u8* source, u8* sourcePal, u32 width, u32 height, u32 drawWidth, u32 drawHeight, s16 alpha);",
          "\tasm(\"Draw2DScaled = 0x800755c8\"); ",
          "    ",
          "extern void Draw2DInternal(u8 RGBAType, u8* texture, u8* palette, Gfx** gfxp, s16 centerX, s16 centerY, u32 width, u32 height, u32 drawWidth, u32 drawHeight, s16 alpha);",
          "    asm(\"Draw2DInternal = 0x800D7B00\");",
          "",
          "static inline void Draw2D(u8 RGBAType, int object, PlayState* playState, Gfx** gfxp, s16 centerX, s16 centerY, u8* source, u8* sourcePal, u32 width, u32 height, s16 alpha)",
          "{",
          "\tDraw2DScaled(RGBAType, object, playState, gfxp, centerX, centerY, source, sourcePal, width, height, width, height, alpha);",
          "}",
          "",
          "extern PadMgr gPadMgr;  ",
          "    asm(\"gPadMgr = 0x8011D500\");",
          "",
          "#define POINTERHANDX 32",
          "#define POINTERHANDY 32",
          "#define POINTERHAND 0x76A8",
          "",
          "void NpcM_Update(NpcMaker* npc, PlayState* play)",
          "{",
          "    u8 mouseSlot = 0;",
          "    ",
          "    for (int i = 1; i < MAXCONTROLLERS; i++)",
          "    {",
          "        if (gPadMgr.padStatus[i].errno == 0 && gPadMgr.padStatus[i].type == CONT_TYPE_MOUSE)",
          "        {",
          "            mouseSlot = i;",
          "            break;",
          "        }",
          "    }",
          "    ",
          "    if (mouseSlot != 0) ",
          "    {",
          "        if (gPadMgr.padStatus[mouseSlot].type == CONT_TYPE_MOUSE) ",
          "        {",
          "            npc->scriptVars[5] += gPadMgr.inputs[mouseSlot].cur.stick_x;",
          "            npc->scriptVars[6] -= gPadMgr.inputs[mouseSlot].cur.stick_y;              ",
          "        }",
          "    }",
          "",
          "    if (ABS(play->state.input->cur.stick_x) > 5)",
          "    {",
          "        npc->scriptVars[5] += (play->state.input->cur.stick_x / 12);",
          "    }",
          "    else",
          "    {",
          "        if (CHECK_BTN_ALL(play->state.input->cur.button, BTN_DRIGHT))",
          "            npc->scriptVars[5] += 6;",
          "",
          "        if (CHECK_BTN_ALL(play->state.input->cur.button, BTN_DLEFT))",
          "            npc->scriptVars[5] -= 6;           ",
          "    }",
          "",
          "    if (ABS(play->state.input->cur.stick_y) > 5)",
          "    {",
          "        npc->scriptVars[6] -= (play->state.input->cur.stick_y / 12);",
          "    }",
          "    else",
          "    {",
          "        if (CHECK_BTN_ALL(play->state.input->cur.button, BTN_DUP))",
          "            npc->scriptVars[6] -= 6;",
          "",
          "        if (CHECK_BTN_ALL(play->state.input->cur.button, BTN_DDOWN))",
          "            npc->scriptVars[6] += 6;           ",
          "    }",
          "",
          "    npc->scriptVars[5] = MAX(MIN(npc->scriptVars[5], 320 - 8), 0);",
          "    npc->scriptVars[6] = MAX(MIN(npc->scriptVars[6], 240 - 8), 0);  ",
          "",
          "",
          "}",
          "",
          "Vec2s positions[201];",
          "int numFaces = -1;",
          "int roundEffect = 0;",
          "int roundEffect2 = 0;",
          "int roundEffect3 = 0;",
          "int roundEffect4 = 0;",
          "",
          "void NpcM_DrawWanted(NpcMaker* npc, PlayState* play, float DrawType)",
          "{",
          "    R_UPDATE_RATE = 2;",
          "    GraphicsContext* __gfxCtx = play->state.gfxCtx;",
          "    Gfx* gfxRef = POLY_OPA_DISP;",
          "    Gfx* gfx = Graph_GfxPlusOne(gfxRef);",
          "",
          "    gSPDisplayList(OVERLAY_DISP++, gfx);",
          "",
          "    switch ((int)DrawType)",
          "    {",
          "        case 1:",
          "        {",
          "            numFaces = -1;",
          "            HoL_DrawMessageText(play, &gfx, (Color_RGB8){255, 0, 0}, (Color_RGB8){255, 255, 255}, 255, 255, \"WANTED\", 110, 30, 1, 1, NULL, 150, OPERATION_DRAW_SHADOW);",
          "            break;",
          "        }",
          "        case 2:",
          "        {",
          "            HoL_DrawMessageText(play, &gfx, (Color_RGB8){255, 0, 0}, (Color_RGB8){255, 255, 255}, 255, 255, \"GAME OVER\", 70, 100, 1, 1, NULL, 200, OPERATION_DRAW_SHADOW);",
          "            break;",
          "        }",
          "        case 3:",
          "        {",
          "            s32 chosen = npc->scriptVars[4] - 1;",
          "            s32 round = npc->scriptVars[9];",
          "",
          "            if (numFaces == -1)",
          "            {",
          "                numFaces = Rand_S16Offset(4 + (round * 2), round * 2);",
          "",
          "                if (numFaces > 200)",
          "                    numFaces = 200;",
          "",
          "                for (int i = 0; i < numFaces; i++)",
          "                {",
          "                    positions[i].x = Rand_S16Offset(20, 280);",
          "                    positions[i].y = Rand_S16Offset(20, 200);",
          "                    positions[i].face = Rand_S16Offset(0, 4);",
          "",
          "                    while (positions[i].face == chosen)",
          "                        positions[i].face = Rand_S16Offset(0, 4);",
          "                }",
          "",
          "                positions[numFaces].x = Rand_S16Offset(0, 320);",
          "                positions[numFaces].y = Rand_S16Offset(0, 240);",
          "                positions[numFaces].face = chosen;",
          "",
          "                roundEffect = 0;",
          "",
          "                if (round > 5)",
          "                {",
          "                    roundEffect = Rand_S16Offset(0, 4);",
          "                    roundEffect2 = Rand_S16Offset(0, 5);",
          "                    roundEffect3 = Rand_S16Offset(0, 1);",
          "                    roundEffect4 = Rand_S16Offset(-3, 6);",
          "    ",
          "                    if (roundEffect4 == 0)",
          "                        roundEffect4 = 1;",
          "                }",
          "            }",
          "",
          "            if (roundEffect & 1)",
          "            {",
          "                for (int i = 0; i <= numFaces; i++)",
          "                {",
          "                    if (positions[i].face == roundEffect2 || roundEffect2 == 4)",
          "                    {",
          "                        positions[i].x += roundEffect4;",
          "",
          "                        if (positions[i].x > 336)",
          "                            positions[i].x = -16;",
          "",
          "                        if (positions[i].x < -16)",
          "                            positions[i].x = 336;                                ",
          "",
          "                    }",
          "                }    ",
          "            }",
          "",
          "            if (roundEffect & 2)",
          "            {",
          "                for (int i = 0; i <= numFaces; i++)",
          "                {",
          "                    if (positions[i].face == roundEffect2 || roundEffect2 == 4)",
          "                    {",
          "                        positions[i].y += roundEffect4;",
          "",
          "                        if (positions[i].y > 256)",
          "                            positions[i].y = -16;",
          "",
          "                        if (positions[i].y < -16)",
          "                            positions[i].y = 256;",
          "",
          "                    }",
          "                }    ",
          "            }",
          "",
          "            bool drawnTarget  = false;",
          "",
          "            for (int i = 0; i < numFaces; i++)",
          "            {",
          "                Draw2D(RGBA16_Setup39, 122, play, &gfx, positions[i].x, positions[i].y, (u8*)((0x800 * positions[i].face)), NULL, 32, 32, 255);",
          "",
          "                if (!drawnTarget && i == numFaces / 2)",
          "                {",
          "                    drawnTarget = true;",
          "                    Draw2D(RGBA16_Setup39, 122, play, &gfx, positions[numFaces].x, positions[numFaces].y, (u8*)((0x800 * positions[numFaces].face)), NULL, 32, 32, 255);",
          "                }",
          "            }",
          "        }",
          "    }",
          "",
          "    char* scoreBuf = \"&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&\";",
          "    sprintf(scoreBuf, \"SCORE: %d                        TIME: %d\", npc->scriptVars[0], npc->scriptVars[1] / 30);",
          "",
          "    HoL_DrawMessageText(play, &gfx, (Color_RGB8){255, 255, 255}, (Color_RGB8){0, 0, 0}, 255, 255, scoreBuf, 20, 220, 1, 1, NULL, 100, OPERATION_DRAW_SHADOW);",
          "",
          "",
          "    Draw2D(CI4, 3, play, &gfx, npc->scriptVars[5] + (POINTERHANDX / 2),  npc->scriptVars[6]  + (POINTERHANDY / 2), (u8*)POINTERHAND + 0x20, (u8*)POINTERHAND, POINTERHANDX, POINTERHANDY, 255);",
          "    ",
          "",
          "    gSPEndDisplayList(gfx++);",
          "    Graph_BranchDlist(gfxRef, gfx);",
          "    POLY_OPA_DISP = gfx;",
          "}",
          "",
          "float NpcM_ClickedRight(NpcMaker* npc, PlayState* play)",
          "{",
          "    if ((npc->scriptVars[5]) >= (positions[numFaces].x - 20) &&",
          "        (npc->scriptVars[5]) <= (positions[numFaces].x + 20) &&",
          "        (npc->scriptVars[6]) >= (positions[numFaces].y - 20) &&",
          "        (npc->scriptVars[6]) <= (positions[numFaces].y + 20))",
          "        return 1;",
          "    else",
          "        return 0;",
          "}",
          "",
          "void NpcM_Destroy(NpcMaker* npc, PlayState* play)",
          "{",
          "    R_UPDATE_RATE = 3;",
          "}"
        ],
        "Functions": [
          {
            "FuncName": "NpcM_ClickedRight"
          },
          {
            "FuncName": "NpcM_Destroy"
          },
          {
            "FuncName": "NpcM_DrawWanted"
          },
          {
            "FuncName": "NpcM_Update"
          }
        ],
        "FuncsRunWhen": [
          [
            -1,
            -1
          ],
          [
            -1,
            -1
          ],
          [
            3,
            0
          ],
          [
            -1,
            -1
          ],
          [
            1,
            -1
          ],
          [
            3,
            -1
          ]
        ],
        "SetFuncNames": [
          "",
          "",
          "NpcM_Update",
          "",
          "NpcM_Destroy",
          "NpcM_Update"
        ]
      },
      "Omitted": false
    },
    {
      "NPCName": "INGO",
      "IsNull": false,
      "ObjectID": 193,
      "Hierarchy": 28192,
      "FileStart": 0,
      "HierarchyType": 0,
      "ModelPositionOffsets": [
        -200,
        -3500,
        0
      ],
      "ModelScale": 0.01,
      "CutsceneID": 0,
      "LookAtType": 0,
      "HeadLimb": 0,
      "HeadHorizAxis": 0,
      "HeadVertAxis": 0,
      "WaistLimb": 0,
      "WaistHorizAxis": 0,
      "WaistVertAxis": 0,
      "LookAtDegreesVertical": 0,
      "LookAtDegreesHorizontal": 0,
      "LookAtPositionOffsets": [
        0.0,
        0.0,
        0.0
      ],
      "HasCollision": false,
      "PushesSwitches": false,
      "Mass": 254,
      "IsAlwaysActive": false,
      "IsAlwaysDrawn": false,
      "ExecuteJustScript": false,
      "ReactsIfAttacked": false,
      "SfxIfAttacked": -1,
      "EffectIfAttacked": 10,
      "OpensDoors": false,
      "CollisionRadius": 0,
      "CollisionHeight": 0,
      "CollisionYShift": 0,
      "NPCToRide": -1,
      "CastsShadow": false,
      "ShadowRadius": 0,
      "VisibleUnderLensOfTruth": false,
      "Invisible": true,
      "IsTargettable": false,
      "FadeOut": false,
      "Alpha": 255,
      "TargetDistance": 1,
      "TargetLimb": 0,
      "TargetPositionOffsets": [
        0,
        0,
        0
      ],
      "TalkRadius": 150.0,
      "MovementType": 0,
      "MovementDistance": 0,
      "MovementSpeed": 1.0,
      "GravityForce": 0.1,
      "PathID": 0,
      "PathStartNodeID": -1,
      "PathEndNodeID": -1,
      "MovementDelayTime": 0,
      "LoopPath": false,
      "IgnoreYAxis": true,
      "SmoothingConstant": 15.0,
      "TimedPathStart": 0,
      "TimedPathEnd": 65490,
      "MaxDistRoam": 65535,
      "GenLight": false,
      "Glow": false,
      "LightLimb": 0,
      "LightPositionOffsets": [
        0,
        0,
        0
      ],
      "LightColor": "White",
      "LightRadius": 0,
      "AnimationType": 0,
      "Animations": [
        {
          "Name": "Idle",
          "Address": 71300,
          "ObjID": -1,
          "Speed": 1.0,
          "StartFrame": 0,
          "EndFrame": 255,
          "FileStart": -1
        },
        {
          "Name": "Walking",
          "Address": 0,
          "ObjID": -1,
          "Speed": 1.0,
          "StartFrame": 0,
          "EndFrame": 255,
          "FileStart": -1
        },
        {
          "Name": "Attacked",
          "Address": 0,
          "ObjID": -1,
          "Speed": 1.0,
          "StartFrame": 0,
          "EndFrame": 255,
          "FileStart": -1
        }
      ],
      "Scripts": [
        {
          "TextLines": [
            "await frames 1",
            "set invisible false"
          ],
          "ParseErrors": [],
          "Name": "Script"
        }
      ],
      "EnvironmentColor": "White",
      "Segments": [
        [
          {
            "Name": "Texture_0",
            "Address": 0,
            "ObjectID": -1,
            "FileStart": -1
          }
        ],
        [],
        [],
        [],
        [],
        [],
        [],
        []
      ],
      "BlinkPattern": "",
      "TalkPattern": "",
      "BlinkSegment": 7,
      "TalkSegment": 7,
      "BlinkSpeed": 1,
      "TalkSpeed": 1,
      "ExtraDisplayLists": [],
      "DisplayListColors": [],
      "Messages": [],
      "Localization": [],
      "DEBUGShowCols": false,
      "DEBUGPrintToScreen": false,
      "DEBUGLookAtEditor": false,
      "DEBUGExDlistEditor": false,
      "NumVars": 2,
      "NumFVars": 2,
      "ExistInAllRooms": false,
      "CullForward": 1000.0,
      "CullDown": 700.0,
      "CullScale": 350.0,
      "AnimInterpFrames": 4,
      "EmbeddedOverlayCode": {
        "CodeLines": [
          ""
        ],
        "Functions": [],
        "FuncsRunWhen": [
          [
            -1,
            -1
          ],
          [
            -1,
            -1
          ],
          [
            -1,
            -1
          ],
          [
            -1,
            -1
          ],
          [
            -1,
            -1
          ],
          [
            -1,
            -1
          ]
        ],
        "SetFuncNames": [
          null,
          null,
          null,
          null,
          null,
          ""
        ]
      },
      "Omitted": false
    },
    {
      "NPCName": "TALON",
      "IsNull": false,
      "ObjectID": 17,
      "Hierarchy": 47032,
      "FileStart": 0,
      "HierarchyType": 0,
      "ModelPositionOffsets": [
        -200,
        -3000,
        0
      ],
      "ModelScale": 0.01,
      "CutsceneID": 0,
      "LookAtType": 0,
      "HeadLimb": 0,
      "HeadHorizAxis": 0,
      "HeadVertAxis": 0,
      "WaistLimb": 0,
      "WaistHorizAxis": 0,
      "WaistVertAxis": 0,
      "LookAtDegreesVertical": 0,
      "LookAtDegreesHorizontal": 0,
      "LookAtPositionOffsets": [
        0.0,
        0.0,
        0.0
      ],
      "HasCollision": false,
      "PushesSwitches": false,
      "Mass": 254,
      "IsAlwaysActive": false,
      "IsAlwaysDrawn": false,
      "ExecuteJustScript": false,
      "ReactsIfAttacked": false,
      "SfxIfAttacked": -1,
      "EffectIfAttacked": 10,
      "OpensDoors": false,
      "CollisionRadius": 0,
      "CollisionHeight": 0,
      "CollisionYShift": 0,
      "NPCToRide": -1,
      "CastsShadow": false,
      "ShadowRadius": 0,
      "VisibleUnderLensOfTruth": false,
      "Invisible": true,
      "IsTargettable": false,
      "FadeOut": false,
      "Alpha": 255,
      "TargetDistance": 1,
      "TargetLimb": 0,
      "TargetPositionOffsets": [
        0,
        0,
        0
      ],
      "TalkRadius": 150.0,
      "MovementType": 0,
      "MovementDistance": 0,
      "MovementSpeed": 1.0,
      "GravityForce": 0.1,
      "PathID": 0,
      "PathStartNodeID": -1,
      "PathEndNodeID": -1,
      "MovementDelayTime": 0,
      "LoopPath": false,
      "IgnoreYAxis": true,
      "SmoothingConstant": 15.0,
      "TimedPathStart": 0,
      "TimedPathEnd": 65490,
      "MaxDistRoam": 65535,
      "GenLight": false,
      "Glow": false,
      "LightLimb": 0,
      "LightPositionOffsets": [
        0,
        0,
        0
      ],
      "LightColor": "White",
      "LightRadius": 0,
      "AnimationType": 0,
      "Animations": [
        {
          "Name": "Idle",
          "Address": 7316,
          "ObjID": -1,
          "Speed": 1.0,
          "StartFrame": 0,
          "EndFrame": 255,
          "FileStart": -1
        },
        {
          "Name": "Walking",
          "Address": 0,
          "ObjID": -1,
          "Speed": 1.0,
          "StartFrame": 0,
          "EndFrame": 255,
          "FileStart": -1
        },
        {
          "Name": "Attacked",
          "Address": 0,
          "ObjID": -1,
          "Speed": 1.0,
          "StartFrame": 0,
          "EndFrame": 255,
          "FileStart": -1
        }
      ],
      "Scripts": [
        {
          "TextLines": [
            "await frames 1",
            "set invisible false"
          ],
          "ParseErrors": [],
          "Name": "Script"
        }
      ],
      "EnvironmentColor": "White",
      "Segments": [
        [
          {
            "Name": "Texture_0",
            "Address": 32640,
            "ObjectID": -1,
            "FileStart": -1
          }
        ],
        [
          {
            "Name": "Texture_0",
            "Address": 29376,
            "ObjectID": -1,
            "FileStart": -1
          }
        ],
        [],
        [],
        [],
        [],
        [],
        []
      ],
      "BlinkPattern": "",
      "TalkPattern": "",
      "BlinkSegment": 7,
      "TalkSegment": 7,
      "BlinkSpeed": 1,
      "TalkSpeed": 1,
      "ExtraDisplayLists": [],
      "DisplayListColors": [],
      "Messages": [],
      "Localization": [],
      "DEBUGShowCols": false,
      "DEBUGPrintToScreen": false,
      "DEBUGLookAtEditor": false,
      "DEBUGExDlistEditor": false,
      "NumVars": 2,
      "NumFVars": 2,
      "ExistInAllRooms": false,
      "CullForward": 1000.0,
      "CullDown": 700.0,
      "CullScale": 350.0,
      "AnimInterpFrames": 4,
      "EmbeddedOverlayCode": {
        "CodeLines": [
          ""
        ],
        "Functions": [],
        "FuncsRunWhen": [
          [
            -1,
            -1
          ],
          [
            -1,
            -1
          ],
          [
            -1,
            -1
          ],
          [
            -1,
            -1
          ],
          [
            -1,
            -1
          ],
          [
            -1,
            -1
          ]
        ],
        "SetFuncNames": [
          null,
          null,
          null,
          null,
          null,
          ""
        ]
      },
      "Omitted": false
    },
    {
      "NPCName": "LINK",
      "IsNull": false,
      "ObjectID": 20,
      "Hierarchy": 63080,
      "FileStart": 0,
      "HierarchyType": 0,
      "ModelPositionOffsets": [
        -200,
        -3000,
        0
      ],
      "ModelScale": 0.01,
      "CutsceneID": 0,
      "LookAtType": 0,
      "HeadLimb": 0,
      "HeadHorizAxis": 0,
      "HeadVertAxis": 0,
      "WaistLimb": 0,
      "WaistHorizAxis": 0,
      "WaistVertAxis": 0,
      "LookAtDegreesVertical": 0,
      "LookAtDegreesHorizontal": 0,
      "LookAtPositionOffsets": [
        0.0,
        0.0,
        0.0
      ],
      "HasCollision": false,
      "PushesSwitches": false,
      "Mass": 254,
      "IsAlwaysActive": false,
      "IsAlwaysDrawn": false,
      "ExecuteJustScript": false,
      "ReactsIfAttacked": false,
      "SfxIfAttacked": -1,
      "EffectIfAttacked": 10,
      "OpensDoors": false,
      "CollisionRadius": 0,
      "CollisionHeight": 0,
      "CollisionYShift": 0,
      "NPCToRide": -1,
      "CastsShadow": false,
      "ShadowRadius": 0,
      "VisibleUnderLensOfTruth": false,
      "Invisible": true,
      "IsTargettable": false,
      "FadeOut": false,
      "Alpha": 255,
      "TargetDistance": 1,
      "TargetLimb": 0,
      "TargetPositionOffsets": [
        0,
        0,
        0
      ],
      "TalkRadius": 150.0,
      "MovementType": 0,
      "MovementDistance": 0,
      "MovementSpeed": 1.0,
      "GravityForce": 0.1,
      "PathID": 0,
      "PathStartNodeID": -1,
      "PathEndNodeID": -1,
      "MovementDelayTime": 0,
      "LoopPath": false,
      "IgnoreYAxis": true,
      "SmoothingConstant": 15.0,
      "TimedPathStart": 0,
      "TimedPathEnd": 65490,
      "MaxDistRoam": 65535,
      "GenLight": false,
      "Glow": false,
      "LightLimb": 0,
      "LightPositionOffsets": [
        0,
        0,
        0
      ],
      "LightColor": "White",
      "LightRadius": 0,
      "AnimationType": 0,
      "Animations": [
        {
          "Name": "Idle",
          "Address": 80088,
          "ObjID": -1,
          "Speed": 1.0,
          "StartFrame": 0,
          "EndFrame": 255,
          "FileStart": -1
        },
        {
          "Name": "Walking",
          "Address": 0,
          "ObjID": -1,
          "Speed": 1.0,
          "StartFrame": 0,
          "EndFrame": 255,
          "FileStart": -1
        },
        {
          "Name": "Attacked",
          "Address": 0,
          "ObjID": -1,
          "Speed": 1.0,
          "StartFrame": 0,
          "EndFrame": 255,
          "FileStart": -1
        }
      ],
      "Scripts": [
        {
          "TextLines": [
            "await frames 1",
            "set invisible false"
          ],
          "ParseErrors": [],
          "Name": "Script"
        }
      ],
      "EnvironmentColor": "White",
      "Segments": [
        [
          {
            "Name": "Texture_0",
            "Address": 11520,
            "ObjectID": -1,
            "FileStart": -1
          }
        ],
        [
          {
            "Name": "Texture_0",
            "Address": 29952,
            "ObjectID": -1,
            "FileStart": -1
          }
        ],
        [],
        [],
        [],
        [],
        [],
        []
      ],
      "BlinkPattern": "",
      "TalkPattern": "",
      "BlinkSegment": 7,
      "TalkSegment": 7,
      "BlinkSpeed": 1,
      "TalkSpeed": 1,
      "ExtraDisplayLists": [],
      "DisplayListColors": [],
      "Messages": [],
      "Localization": [],
      "DEBUGShowCols": false,
      "DEBUGPrintToScreen": false,
      "DEBUGLookAtEditor": false,
      "DEBUGExDlistEditor": false,
      "NumVars": 2,
      "NumFVars": 2,
      "ExistInAllRooms": false,
      "CullForward": 1000.0,
      "CullDown": 700.0,
      "CullScale": 350.0,
      "AnimInterpFrames": 4,
      "EmbeddedOverlayCode": {
        "CodeLines": [
          ""
        ],
        "Functions": [],
        "FuncsRunWhen": [
          [
            -1,
            -1
          ],
          [
            -1,
            -1
          ],
          [
            -1,
            -1
          ],
          [
            -1,
            -1
          ],
          [
            -1,
            -1
          ],
          [
            -1,
            -1
          ]
        ],
        "SetFuncNames": [
          null,
          null,
          null,
          null,
          null,
          ""
        ]
      },
      "Omitted": false
    },
    {
      "NPCName": "GANON",
      "IsNull": false,
      "ObjectID": 155,
      "Hierarchy": 27328,
      "FileStart": 0,
      "HierarchyType": 0,
      "ModelPositionOffsets": [
        -200,
        -5500,
        0
      ],
      "ModelScale": 0.01,
      "CutsceneID": 0,
      "LookAtType": 0,
      "HeadLimb": 0,
      "HeadHorizAxis": 0,
      "HeadVertAxis": 0,
      "WaistLimb": 0,
      "WaistHorizAxis": 0,
      "WaistVertAxis": 0,
      "LookAtDegreesVertical": 0,
      "LookAtDegreesHorizontal": 0,
      "LookAtPositionOffsets": [
        0.0,
        0.0,
        0.0
      ],
      "HasCollision": false,
      "PushesSwitches": false,
      "Mass": 254,
      "IsAlwaysActive": false,
      "IsAlwaysDrawn": false,
      "ExecuteJustScript": false,
      "ReactsIfAttacked": false,
      "SfxIfAttacked": -1,
      "EffectIfAttacked": 10,
      "OpensDoors": false,
      "CollisionRadius": 0,
      "CollisionHeight": 0,
      "CollisionYShift": 0,
      "NPCToRide": -1,
      "CastsShadow": false,
      "ShadowRadius": 0,
      "VisibleUnderLensOfTruth": false,
      "Invisible": true,
      "IsTargettable": false,
      "FadeOut": false,
      "Alpha": 255,
      "TargetDistance": 1,
      "TargetLimb": 0,
      "TargetPositionOffsets": [
        0,
        0,
        0
      ],
      "TalkRadius": 150.0,
      "MovementType": 0,
      "MovementDistance": 0,
      "MovementSpeed": 1.0,
      "GravityForce": 0.1,
      "PathID": 0,
      "PathStartNodeID": -1,
      "PathEndNodeID": -1,
      "MovementDelayTime": 0,
      "LoopPath": false,
      "IgnoreYAxis": true,
      "SmoothingConstant": 15.0,
      "TimedPathStart": 0,
      "TimedPathEnd": 65490,
      "MaxDistRoam": 65535,
      "GenLight": false,
      "Glow": false,
      "LightLimb": 0,
      "LightPositionOffsets": [
        0,
        0,
        0
      ],
      "LightColor": "White",
      "LightRadius": 0,
      "AnimationType": 0,
      "Animations": [
        {
          "Name": "Idle",
          "Address": 94628,
          "ObjID": -1,
          "Speed": 1.0,
          "StartFrame": 0,
          "EndFrame": 255,
          "FileStart": -1
        },
        {
          "Name": "Walking",
          "Address": 0,
          "ObjID": -1,
          "Speed": 1.0,
          "StartFrame": 0,
          "EndFrame": 255,
          "FileStart": -1
        },
        {
          "Name": "Attacked",
          "Address": 0,
          "ObjID": -1,
          "Speed": 1.0,
          "StartFrame": 0,
          "EndFrame": 255,
          "FileStart": -1
        }
      ],
      "Scripts": [
        {
          "TextLines": [
            "await frames 1",
            "set invisible false"
          ],
          "ParseErrors": [],
          "Name": "Script"
        }
      ],
      "EnvironmentColor": "White",
      "Segments": [
        [
          {
            "Name": "Texture_0",
            "Address": 3840,
            "ObjectID": -1,
            "FileStart": -1
          }
        ],
        [],
        [],
        [],
        [],
        [],
        [],
        []
      ],
      "BlinkPattern": "",
      "TalkPattern": "",
      "BlinkSegment": 7,
      "TalkSegment": 7,
      "BlinkSpeed": 1,
      "TalkSpeed": 1,
      "ExtraDisplayLists": [
        {
          "Name": "DList_0",
          "Address": 40712,
          "TransX": 0.0,
          "TransY": 0.0,
          "TransZ": 0.0,
          "RotX": 0,
          "RotY": 0,
          "RotZ": 0,
          "Scale": 1.0,
          "ShowType": 3,
          "Limb": 8,
          "Color": "White",
          "ObjectID": -1,
          "FileStart": -1
        },
        {
          "Name": "DList_1",
          "Address": 33320,
          "TransX": 0.0,
          "TransY": 0.0,
          "TransZ": 0.0,
          "RotX": 0,
          "RotY": 0,
          "RotZ": 0,
          "Scale": 1.0,
          "ShowType": 3,
          "Limb": 4,
          "Color": "White",
          "ObjectID": -1,
          "FileStart": -1
        }
      ],
      "DisplayListColors": [],
      "Messages": [],
      "Localization": [],
      "DEBUGShowCols": false,
      "DEBUGPrintToScreen": false,
      "DEBUGLookAtEditor": false,
      "DEBUGExDlistEditor": false,
      "NumVars": 2,
      "NumFVars": 2,
      "ExistInAllRooms": false,
      "CullForward": 1000.0,
      "CullDown": 700.0,
      "CullScale": 350.0,
      "AnimInterpFrames": 4,
      "EmbeddedOverlayCode": {
        "CodeLines": [
          "#include \"npc_maker_header.h\"",
          "#include <npcmaker/npc_maker_types.h>",
          "",
          "/*",
          "To make NPC Maker able to use your function, it must have the following form:",
          "",
          "1. Its name must have a NpcM_ prefix (eg. NpcM_Function),",
          "2. Must have at least two parameters: NpcMaker* and PlayState*. Up to 8 additional float arguments can be passed on from scripts.",
          "3. If you plan to pass the result to scripts, the return type must be float",
          "5. A unique name",
          "",
          "Examples of valid function signatures are thus, for example:",
          "",
          "void NpcM_Function(NpcMaker* npc, PlayState* play, float argument, float argument1)",
          "float NpcM_Function2(NpcMaker* npc, PlayState* play)",
          "float NpcM_DoAThing(NpcMaker* npc, PlayState* play)",
          "",
          "The exception for this is functions which should run \"On limb\", their signature is as follows:",
          "",
          "float NpcM_Function(NpcMaker* npc, PlayState* playState, s32 limbNumber, Gfx** dListPtr, Vec3f* translation, Vec3s* rotation, void* instance, Gfx** gfxP)",
          "",
          "This function should return 0 if the limb is meant to be drawn, and 1 if it is not.",
          "",
          "For \"post limb\" functions, the signature is the same, but some of the arguments might be NULL, and the function doesn't return anything.",
          "For \"Skin\" models, only the limb number is available.",
          "For others, everything but the translation is available.",
          "",
          "Warning; When using these functions from scripts, make sure",
          "the return type is valid.",
          "*/"
        ],
        "Functions": [],
        "FuncsRunWhen": [
          [
            -1,
            -1
          ],
          [
            -1,
            -1
          ],
          [
            -1,
            -1
          ],
          [
            -1,
            -1
          ],
          [
            -1,
            -1
          ],
          [
            -1,
            -1
          ]
        ],
        "SetFuncNames": [
          null,
          null,
          null,
          null,
          null,
          ""
        ]
      },
      "Omitted": false
    }
  ],
  "GlobalHeaders": [
    {
      "TextLines": [
        "#define SCORE var.1",
        "#define TIME var.2",
        "#define DRAW var.3",
        "#define TEMP var.4",
        "#define CHOSEN var.5",
        "#define POINTERX var.6",
        "#define POINTERY var.7",
        "#define TIME_COUNTER var.8",
        "#define COUNT_DOWN var.9",
        "#define ROUND var.10",
        "",
        "",
        "",
        "",
        "",
        "#define actor.posX actorf.0x24",
        "#define actor.posY actorf.0x28",
        "#define actor.posZ actorf.0x2C",
        "#define actor.dirX actor16.0x30",
        "#define actor.dirY actor16.0x32",
        "#define actor.dirZ actor16.0x34",
        "",
        "#define actor.homePosX actorf.0x8",
        "#define actor.homePosY actorf.0xC",
        "#define actor.homePosZ actorf.0x10",
        "#define actor.homeDirX actor16.0x12",
        "#define actor.homeDirY actor16.0x14",
        "#define actor.homeDirZ actor16.0x16",
        "",
        "#define actor.scaleX actorf.0x50",
        "#define actor.scaleY actorf.0x54",
        "#define actor.scaleZ actorf.0x58",
        "",
        "#define actor.velocityX actorf.0x5C",
        "#define actor.velocityY actorf.0x60",
        "#define actor.velocityZ actorf.0x64",
        "",
        "#define actor.rotX actor16.0xB4",
        "#define actor.rotY actor16.0xB6",
        "#define actor.rotZ actor16.0xB8",
        "",
        "#define npcmaker.isSpeaking actor8.0x20E",
        "#define npcmaker.invisible actor8.0x175",
        "#define npcmaker.curTextPos actor16.0x37C",
        "#define npcmaker.curtextId actor32.0x368",
        "#define npcmaker.curTextboxNum actor8.0x216",
        "",
        "#define gTextBufPos global16.0x104A6",
        "#define gTextboxPos global8.0x103D6",
        "#define gTextboxType global8.0x103D5",
        "#define gTextboxProperties global8.0x103D4",
        "#define gTextboxDecodedLen global16.0x104AC",
        "#define gTextboxDrawPos global16.0x104AA",
        "#define gTextboxPaused global16.0x104CC",
        "#define gTextboxMode global8.0x103DC",
        "#define gPreventTxtboxAdvanceAndSounds global8.0x104D0",
        "#define gTextSpeed global8.0x104D1",
        "#define gRebuttalSpeakerSoundIdx global8.0x104D2",
        "#define gTextboxEndType global8.0x104BC",
        "",
        "#define SAVE_PROGRESS save32.0x18",
        "#define SAVE_HEALTH save16.0x2E",
        "#define EVIDENCE save16.0x36",
        "#define DEBUG_MODE_ON save8.0x3D",
        "#define DEBUG_SPAWNSCENE save16.0x22",
        "#define GAME_BEATEN save8.0xF40",
        "#define SCENE_LAST_DIED_ON save8.0xF41",
        "#define SAVE_LASLOT save8.0xF43",
        "#define SAVE_LAKILLEDBYSHOPKEEPER save8.0xF44",
        "#define SAVE_LANAME save8.0xF45",
        "#define SAVE_NUMTHEFTS save8.0xF4A",
        "",
        "#define UIACTOR_SPEAKER actor8.0x13C",
        "#define UIACTOR_SELECTEDUI actor8.0x13D",
        "#define UIACTOR_ARROWS actor8.0x13E",
        "#define UIACTOR_SUBTITLE actor8.0x13F",
        "#define UIACTOR_HEARTS actor8.0x140",
        "#define UIACTOR_EVIDENCE actor8.0x141",
        "#define UIACTOR_SHOWCHECKMARK actor8.0x143",
        "#define UIACTOR_CE_STATEMENTCOUNT actor8.0x144",
        "#define UIACTOR_CE_CURSTATEMENT actor8.0x145",
        "#define UIACTOR_CE_ENABLE_POINTER actor8.0x146",
        "#define UIACTOR_EXPLODE_TEXTBOX actor8.0x147",
        "#define UIACTOR_DISABLE_MSG_LOGGING actor8.0x148",
        "#define UIACTOR_MSG_LOGSTATUS actor8.0x149",
        "#define UIACTOR_CURRENT_SCENE actor8.0x14A",
        "#define UIACTOR_COURTRECORD_STATUS actor8.0x14B",
        "#define UIACTOR_COURTRECORD_PRESENTED actor8.0x14C",
        "#define UIACTOR_COURTRECORD_MODE actor8.0x14D",
        "#define UIACTOR_COURTRECORD_SINGLELIST actor8.0x14E",
        "#define UIACTOR_SPEAKER_FORCE actor8.0x14F",
        "#define UIACTOR_LOGSUBTITLE actor8.0x150",
        "#define UIACTOR_CE_SHOWCONSULT actor8.0x151",
        "#define UIACTOR_FORCEDPRESENT actor8.0x152",
        "#define UIACTOR_PAD3 actor8.0x153",
        "#define UIACTOR_CE_POINTER_X actor16.0x154",
        "#define UIACTOR_CE_POINTER_Y actor16.0x156",
        "",
        "#define VRS_LASTWORD actor8.0x13C",
        "#define VRS_LISTENING actor8.0x13D",
        "#define VRS_DETECTIONTIMER actor8.0x13E",
        "#define VRS_DISABLED actor8.0x13F",
        "#define VRS_REGION actor8.0x140",
        "",
        "#define LIST_EVIDENCE 0",
        "#define LIST_PROFILES 1",
        "",
        "#define UIACTOR_EXPLOSION_IDLE 0",
        "#define UIACTOR_EXPLOSION_START 1",
        "#define UIACTOR_EXPLOSION_ONGOING 2",
        "#define UIACTOR_EXPLOSION_COMPLETE 3",
        "",
        "#define UIACTOR_MSGLOG_IDLE 0",
        "#define UIACTOR_MSGLOG_OPENED 1",
        "#define UIACTOR_MSGLOG_OPEN 2",
        "",
        "#define GUI_NONE 0",
        "#define GUI_INVESTIGATION 1",
        "#define GUI_COURTRECORD_EVIDENCE 2",
        "#define GUI_COURTRECORD_PROFILES 3",
        "#define GUI_CROSS_EXAMINATION_EVIDENCE 4",
        "#define GUI_CROSS_EXAMINATION_PROFILES 5",
        "#define GUI_PRESENT 6",
        "#define GUI_PHOTO 7",
        "#define GUI_PHOTO_EVIDENCE 8",
        "#define GUI_CROSS_EXAMINATION 9",
        "#define GUI_CASE2PIC 10",
        "#define GUI_INVENTORY 11",
        "#define GUI_INVENTORY_EVIDENCE 12",
        "#define GUI_CRATES 13",
        "",
        "#define GUI_ARROWS_NONE 0",
        "#define GUI_ARROWS_LEFT 2",
        "#define GUI_ARROWS_RIGHT 1",
        "#define GUI_ARROWS_BOTH 3",
        "",
        "#define GUI_HEARTS_NONE 0",
        "#define GUI_HEARTS_IN 1",
        "#define GUI_HEARTS_OUT 2",
        "#define GUI_HEARTS_SHOWING 3",
        "#define GUI_HEARTS_DAMAGE 4",
        "",
        "#define SUBTITLE_NONE 0",
        "#define SUBTITLE_HOLDIT 3",
        "#define SUBTITLE_OBJECTION 4",
        "#define SUBTITLE_TAKETHAT 5",
        "#define SUBTITLE_WITNESSTESTIMONY 6",
        "#define SUBTITLE_CROSSEXAMINATION 7",
        "#define SUBTITLE_GUILTY 8",
        "#define SUBTITLE_NOTGUILTY 9",
        "#define SUBTITLE_REBUTTAL 10",
        "#define SUBTITLE_ARGUMENTCOMPLETE 11",
        "",
        "#define COURTRECORD_MODE_NORMAL 0",
        "#define COURTRECORD_MODE_PRESENT 1",
        "",
        "#define EXCL_HOLDIT 3",
        "#define EXCL_OBJECTION 4",
        "#define EXCL_TAKETHAT 5",
        "#define EXCL_WITNESS 6",
        "#define EXCL_CROSSEXAM 7",
        "#define EXCL_GUILTY 8",
        "#define EXCL_NOTGUILTY 9",
        "#define EXCL_REBUTTAL 10",
        "#define EXCL_ARGUMENTCOMPLETE 11",
        "#define EXCL_HIPOLYOBJECTION 14",
        "#define EXCL_NONE 0",
        "",
        "#define OBJ_INVISIBLE 1",
        "#define OBJ_VISIBLE 0",
        "",
        "#define CR_CLOSED 0",
        "#define CR_INVESTIGATION 1",
        "#define CR_CROSSEXAM 2",
        "#define CR_IDLE 3",
        "",
        "#define GAVEL_NONE 0",
        "#define GAVEL_SINGLE 1",
        "#define GAVEL_SINGLE_FADE 2",
        "#define GAVEL_TRIPLE 3",
        "",
        "#define FRAMES_NUM_FORCE_COURTRECORD 40",
        "#define INGO_BREAKDOWN_CUCCO_HITS_MINUS_1 14",
        "#define INGO_BREAKDOWN_CUCCO_HITS 15",
        "",
        "#define MALON_WITNESS_YPOS 6",
        "#define KOHOLINK_WITNESS_YPOS 4",
        "#define MUTOH_WITNESS_YPOS 4",
        "",
        "#define TEXTBOX_ENDTYPE_DEFAULT     0x00",
        "#define TEXTBOX_ENDTYPE_2_CHOICE    0x10",
        "#define TEXTBOX_ENDTYPE_3_CHOICE    0x20",
        "#define TEXTBOX_ENDTYPE_HAS_NEXT    0x30",
        "#define TEXTBOX_ENDTYPE_PERSISTENT  0x40",
        "#define TEXTBOX_ENDTYPE_EVENT       0x50",
        "#define TEXTBOX_ENDTYPE_FADING      0x60",
        "",
        "",
        "#define UIACTOR_CR_IDLE 0",
        "#define UIACTOR_CR_OPENING 1",
        "",
        "#define SCENE_ID_TITLE 0x36",
        "#define SCENE_ID_COURT 0x38",
        "#define SCENE_ID_LOBBY 0x35",
        "#define SCENE_ID_TALONGAME 0x62",
        "#define SCENE_ID_RANCH 0x37",
        "#define SCENE_ID_HYRULE_FIELD 0x26",
        "#define SCENE_ID_HYRULECASTLE 0x27",
        "#define SCENE_ID_DETOFFICE 0x40",
        "#define SCENE_ID_PRISON 0x29",
        "#define SCENE_ID_GRAVEYARD 0x30",
        "#define SCENE_ID_LAWOFFICES 0x31",
        "#define SCENE_ID_COURTYARD 0x3B",
        "#define SCENE_ID_ORGAN 0x3C",
        "",
        "#define ROUTE_RANCH 0x5",
        "#define ROUTE_COURTROOM_FADEBLACK 0x50",
        "#define ROUTE_COURTROOM_FADEWHITE 0x60",
        "#define ROUTE_LOBBY 0x40",
        "#define ROUTE_HYRULECASTLE 0x30",
        "#define ROUTE_TITLE 0xCD",
        "#define ROUTE_THONKING 0x1D",
        "#define ROUTE_HYRULEFIELD 0x25",
        "#define ROUTE_DETOFFICE 0x10",
        "#define ROUTE_PRISON 0x80",
        "#define ROUTE_GRAVEYARD 0x8C",
        "#define ROUTE_OFFICE 0x96",
        "#define ROUTE_COURTYARD 0xA0",
        "#define ROUTE_ORGAN 0xB0",
        "",
        "#define SCENE_HEADER_GAME 4",
        "#define SCENE_HEADER_CREDITS 5",
        "#define SCENE_HEADER_CUTSCENE1 6",
        "#define SCENE_HEADER_TITLESCREEN 7",
        "",
        "#define MUSICEFF_NONE 0",
        "#define MUSICEFF_SET_VOLUME 1",
        "#define MUSICEFF_SET_TEMPO 2",
        "",
        "#define SCENE_IDLE 0",
        "#define SCENE_PAUSE 1",
        "#define SCENE_RESUME 2",
        "",
        "#define EASING_TYPE_NONE 0",
        "#define EASING_TYPE_EASE_IN 1",
        "#define EASING_TYPE_EASE_OUT 2",
        "#define EASING_TYPE_EASE_IN_OUT 3"
      ],
      "ParseErrors": [],
      "Name": "Definitions"
    }
  ],
  "SpaceFromFont": true,
  "CHeaderLines": [
    "#include <z64hdr/oot_u10/z64hdr.h>",
    "",
    "// ^ Change the above to",
    "// #include <z64hdr/oot_u10/z64hdr.h>",
    "// if compiling for OoT 1.0",
    "",
    "#include <npcmaker/npc_maker_types.h>",
    "",
    "/*",
    "To make use of this header, include",
    "#include \"npc_maker_header.h\"",
    "in your Embedded Code file.",
    "*/"
  ],
  "GameVersion": 1,
  "Languages": []
}